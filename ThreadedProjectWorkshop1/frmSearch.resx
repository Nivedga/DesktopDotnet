<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        v/l/aHCPdWBpCDgAAAAASUVORK5CYII=
</value>
  </data>
</root>